// <auto-generated />
using System;
using KhatmaBackEnd.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KhatmaBackEnd.Migrations
{
    [DbContext(typeof(KhatmaContext))]
    [Migration("20201210112702_IntaiteDb")]
    partial class IntaiteDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KhatmaBackEnd.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KhatmaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhatmaId");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KhatmaId = 1,
                            Name = "Public"
                        });
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.Khatma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("khatmas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Public",
                            Type = 0
                        });
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KhatmaCount")
                        .HasColumnType("int");

                    b.Property<int?>("KhatmaId")
                        .HasColumnType("int");

                    b.Property<int?>("LastDistributedPage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhatmaId");

                    b.ToTable("KhatmaSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KhatmaCount = 0,
                            KhatmaId = 1,
                            LastDistributedPage = 0
                        });
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("KhatmaId")
                        .HasColumnType("int");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PageDistributedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PageNo")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("KhatmaId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.UserDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeviceToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("userDevices");
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.UserPages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PageDistributedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PageNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("userPages");
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.Group", b =>
                {
                    b.HasOne("KhatmaBackEnd.Entities.Khatma", "Khatma")
                        .WithMany()
                        .HasForeignKey("KhatmaId");
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.Setting", b =>
                {
                    b.HasOne("KhatmaBackEnd.Entities.Khatma", "Khatma")
                        .WithMany()
                        .HasForeignKey("KhatmaId");
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.User", b =>
                {
                    b.HasOne("KhatmaBackEnd.Entities.Group", "group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId");

                    b.HasOne("KhatmaBackEnd.Entities.Khatma", "khatma")
                        .WithMany()
                        .HasForeignKey("KhatmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KhatmaBackEnd.Entities.UserDevice", b =>
                {
                    b.HasOne("KhatmaBackEnd.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
